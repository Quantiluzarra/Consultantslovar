from telegram.ext import Updater, CommandHandler, MessageHandler, filters
from telegram import ReplyKeyboardRemove
from config import TOKEN, LANGUAGES, DIFFICULTIES
from game import Game
from keyboards import main_menu, settings_menu, language_menu, difficulty_menu

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–≥—Ä—ã
game = Game()
# –•—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_settings = {}

def start(update, context):
    user_id = update.effective_chat.id
    user_settings[user_id] = {'language': 'ru', 'difficulty': 'medium'}
    update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –∏–≥—Ä—É!',
        reply_markup=main_menu('ru')
    )

def play(update, context):
    user_id = update.effective_chat.id
    language = user_settings[user_id]['language']
    difficulty = user_settings[user_id]['difficulty']
    word = game.start_game(user_id, language, difficulty)
    update.message.reply_text(
        '–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ.',
        reply_markup=ReplyKeyboardRemove()
    )

def profile(update, context):
    user_id = update.effective_chat.id
    stats = game.get_statistics(user_id)
    message = f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n–ò–≥—Ä—ã: {stats['games']}\n–ü–æ–±–µ–¥—ã: {stats['wins']}"
    update.message.reply_text(message)

def settings(update, context):
    user_id = update.effective_chat.id
    language = user_settings[user_id]['language']
    update.message.reply_text(
        '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:',
        reply_markup=settings_menu(language)
    )

def change_language(update, context):
    update.message.reply_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:',
        reply_markup=language_menu()
    )

def change_difficulty(update, context):
    update.message.reply_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å:',
        reply_markup=difficulty_menu()
    )

def handle_message(update, context):
    user_id = update.effective_chat.id
    text = update.message.text
    if user_id not in user_settings:
        user_settings[user_id] = {'language': 'ru', 'difficulty': 'medium'}
    language = user_settings[user_id]['language']

    if text in ['–ò–≥—Ä–∞—Ç—å', 'Play']:
        play(update, context)
    elif text in ['üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'üë§ Profile']:
        profile(update, context)
    elif text in ['‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', '‚öôÔ∏è Settings']:
        settings(update, context)
    elif text in ['–Ø–∑—ã–∫', 'Language']:
        change_language(update, context)
    elif text in ['–°–ª–æ–∂–Ω–æ—Å—Ç—å', 'Difficulty']:
        change_difficulty(update, context)
    elif text in ['–†—É—Å—Å–∫–∏–π', 'English']:
        user_settings[user_id]['language'] = 'ru' if text == '–†—É—Å—Å–∫–∏–π' else 'en'
        update.message.reply_text(
            '–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω.',
            reply_markup=main_menu(user_settings[user_id]['language'])
        )
    elif text in DIFFICULTIES.keys():
        user_settings[user_id]['difficulty'] = DIFFICULTIES[text]
        update.message.reply_text(
            '–°–ª–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞.',
            reply_markup=main_menu(user_settings[user_id]['language'])
        )
    elif text in ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '‚¨ÖÔ∏è Back']:
        update.message.reply_text(
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:',
            reply_markup=main_menu(user_settings[user_id]['language'])
        )
    else:
        process_guess(update, context, text)

def process_guess(update, context, guess):
    user_id = update.effective_chat.id
    if user_id not in game.current_words:
        update.message.reply_text(
            '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã. –ù–∞–∂–º–∏—Ç–µ "–ò–≥—Ä–∞—Ç—å", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É.'
        )
        return
    language = user_settings[user_id]['language']
    if game.is_correct(user_id, guess):
        game.increment_wins(user_id)
        update.message.reply_text(
            'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ!',
            reply_markup=main_menu(language)
        )
    else:
        similarity = game.check_guess(user_id, guess)
        update.message.reply_text(
            f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –°—Ö–æ–¥—Å—Ç–≤–æ: {similarity:.2f}\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
        )

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # –ö–æ–º–∞–Ω–¥—ã
    dp.add_handler(CommandHandler('start', start))

    # –°–æ–æ–±—â–µ–Ω–∏—è
    dp.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...')
    updater.idle()

if __name__ == '__main__':
    main()
